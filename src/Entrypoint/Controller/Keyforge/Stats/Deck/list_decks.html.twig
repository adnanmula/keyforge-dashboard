{% extends "Keyforge/Shared/keyforge_base.html.twig" %}

{% block title %}Decks{% endblock %}

{% block header %}
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/bbbootstrap/libraries@main/choices.min.css">
{% endblock %}

{% block body %}

    <div class="row">
        <div class="float-end">
            <a class="btn btn-dark" data-bs-toggle="collapse" href="#filters" role="button" aria-expanded="false"><i class="bi bi-filter"></i></a>
        </div>
    </div>

    <div class="collapse" id="filters">
        <div class="shadow-lg p-3 mb-5 bg-white rounded">
            <div class="row">
                <div class="col-md-12">
                    <div class="form-group">
                        <label for="tags" class="form-label">Tags</label>
                        <select id="tags" name="tags[]" multiple>
                            {% for tag in tags %}
                                <option value="{{ tag.id }}"> {{ tag.name }} </option>
                            {% endfor %}
                        </select>
                    </div>

                    <div class="divider py-1"></div>

                    <label for="tags" class="form-label">Additional options</label>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" value="" id="with_external">
                        <label class="form-check-label" for="with_external">External decks</label>
                    </div>

                    <div class="divider py-1"></div>

                    <div class="row mt-3">
                        <div class="col-md-12">
                            <button class="btn btn-block btn-dark w-100" id="applyFilters">Apply</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>



    <div class="shadow-lg p-3 mb-5 bg-white rounded">
        <table id="deckList" class="table table-responsive-sm table-hover" style="width:100%;">
            <thead>
                <tr>
                    <th scope="col">Tags</th>
                    <th scope="col">Deck</th>
                    <th scope="col">Set</th>
                    <th scope="col">Houses</th>
                    <th scope="col">Win Rate</th>
                    <th scope="col">SAS</th>
                    <th scope="col"></th>
                </tr>
            </thead>
        </table>
    </div>

    <script src="https://cdn.jsdelivr.net/gh/bbbootstrap/libraries@main/choices.min.js"></script>

    <script>
        function onlyOwned() {
            return false === $('#with_external')[0].checked;
        }

        function tags() {
            const options = $('select#tags.choices__input.is-hidden')[0].options;

            const tagIds = [];
            Array.prototype.forEach.call(options, function(option) {
                tagIds.push(option.value);
            });

            return tagIds;
        }

        function tagName(id) {
            let tagsJson = JSON.parse('{{ tags|json_encode|raw }}');

            tagsJson.each(function (item) {
                console.log(item);
            })

            return 'tagIds';
        }

        $(document).ready(function () {
            new Choices('#tags', {
                removeItemButton: true,
                maxItemCount: null,
                searchResultLimit: null,
                renderChoiceLimit: null,
            });

            $("#applyFilters").click(function(event) {
                $('#deckList').DataTable().ajax.reload();
            });

            $(window).on('resize', function() {
                $('#deckList.dataTable').resize;
            });

            $('#deckList').DataTable({
                initComplete: function () {
                    this.api()
                        .columns([2])
                        .every(function () {
                            var column = this;
                            var select = $('<select class="form-control form-control-sm"><option value="">Set</option></select>');

                            select.appendTo($(column.header()).empty()).on('change', function () {
                                var val = $.fn.dataTable.util.escapeRegex($(this).val());
                                column.search(val, false, false).draw();
                            });

                            select.append('<option value="CotA">Call of the Archons</option>');
                            select.append('<option value="AoA">Age of Ascension</option>');
                            select.append('<option value="WC">Worlds Collide</option>');
                            select.append('<option value="MM">Mass Mutation</option>');
                            select.append('<option value="DT">Dark Tidings</option>');
                        });

                    this.api()
                        .columns([3])
                        .every(function () {
                            var column = this;
                            var select = $('<select class="form-control form-control-sm"><option value="">Houses</option></select>');

                            select.appendTo($(column.header()).empty()).on('change', function () {
                                var val = $.fn.dataTable.util.escapeRegex($(this).val());
                                column.search(val, false, false).draw();
                            });

                            select.append('<option value="BROBNAR">Brobnar</option>');
                            select.append('<option value="DIS">Dis</option>');
                            select.append('<option value="MARS">Mars</option>');
                            select.append('<option value="SHADOWS">Shadows</option>');
                            select.append('<option value="UNTAMED">Untamed</option>');
                            select.append('<option value="SANCTUM">Sanctum</option>');
                            select.append('<option value="LOGOS">Logos</option>');
                            select.append('<option value="SAURIAN">Saurian</option>');
                            select.append('<option value="STAR_ALLIANCE">Star Alliance</option>');
                            select.append('<option value="UNFATHOMABLE">Unfathomable</option>');
                        });
                },
                searching: true,
                paging: true,
                info: true,
                responsive: true,
                processing: true,
                serverSide: true,
                order: [[4, 'desc']],
                lengthMenu: [10, 25, 50, 100],
                iDisplayLength: 25,
                ajax: {
                    url: '/keyforge/decks/json',
                    data: function(d){
                        d.extraFilterOnlyOwned = onlyOwned();
                        d.extraFilterTags = tags();
                    }
                },
                columns: [
                    { data: "tags" },
                    { data: "name" },
                    { data: "set" },
                    { data: "houses" },
                    { data: "wins" },
                    { data: "sas" },
                    { data: "sas" },
                ],
                columnDefs: [
                    {
                        render: function (data, type, row) {
                            let tagsJson = JSON.parse('{{ tags|json_encode|raw }}');
                            let tags = [];

                            data.forEach(function (tagId) {
                                tagsJson.forEach(function (item) {
                                    if (tagId === item.id) {
                                        const tag = '<button type="button" class="btn btn-outline-dark" data-value="' + item.name
                                            + '" style="background-color: ' + item.style.color_bg + '; color: ' + item.style.color_text + '; border-color: ' + item.style.color_outline + '">'
                                            + item.name + '</button>';

                                        tags.push(tag);
                                    }
                                })
                            })

                            return tags.sort().join('<br>');
                        },
                        targets: 0, //Tags
                    },
                    {
                        render: function (data, type, row) {
                            return '<a href="/keyforge/games/deck/' + row.id + '">' + data + '</a>';
                        },
                        targets: 1, //Deck
                    },
                    {
                        render: function (data, type, row) {
                            let size = data === 'WC' ? 37 : 33;

                            let setNumber = 0;
                            switch (data) {
                                case 'CotA':
                                    setNumber = 1;
                                    break;
                                case 'AoA':
                                    setNumber = 2;
                                    break;
                                case 'WC':
                                    setNumber = 3;
                                    break;
                                case 'MM':
                                    setNumber = 4;
                                    break;
                                case 'DT':
                                    setNumber = 5;
                                    break;
                                case 'WoE':
                                    setNumber = 6;
                                    break;
                            }

                            return '<img width="' + size + 'px" src="' + '/assets/keyforge/sets/' + data + '.svg' + '" alt="' + data + '"/><h6>' + setNumber + '</h6>';
                        },
                        targets: 2, //Set
                    },
                    {
                        render: function (data, type, row) {
                            let house0 = '/assets/keyforge/houses/' + data[0] + '.png';
                            let house1 = '/assets/keyforge/houses/' + data[1] + '.png';
                            let house2 = '/assets/keyforge/houses/' + data[2] + '.png';

                            return '<img width="35px" src="' + house0 + '" alt="' + data[0] +'"/>' +
                                '<img width="35px" src="' + house1 + '" alt="' + data[1] +'"/>' +
                                '<img width="35px" src="' + house2 + '" alt="' + data[2] +'"/>';
                        },
                        targets: 3, //Houses
                    },
                    {
                        render: function (data, type, row) {
                            let wins = row.wins;
                            let losses = row.losses;
                            let win_rate = 0;

                            if (wins + losses > 0) {
                                win_rate = wins / (wins + losses) * 100;
                                win_rate = Math.round((win_rate + Number.EPSILON) * 100) / 100;
                            }

                            return wins + '/' + losses + ' (' + win_rate + '%)';
                        },
                        targets: 4, //Win Rate
                    },
                    {
                        render: function (data, type, row) {
                            return data;
                        },
                        targets: 5, //Sas
                    },
                    {
                        render: function (data, type, row) {
                            vaultLink = 'https://www.keyforgegame.com/deck-details/' + row.id;
                            dokLink = 'https://decksofkeyforge.com/decks/' + row.id;
                            wikiLink = 'https://archonarcana.com/Deck:' + row.id;

                            vaultLogo = '/assets/keyforge/logos/vault.png';
                            dokLogo = '/assets/keyforge/logos/dok.svg';
                            wikiLogo = '/assets/keyforge/logos/wiki.jpg';

                            return '<a href="' + vaultLink + '" target="_blank">' +
                                '<img class="img-thumbnail" width="50px" style="min-width: 50px" src="' + vaultLogo + '" alt="Vault"/></a>' +
                                '<a href="' + dokLink + '" target="_blank">' +
                                '<img class="img-thumbnail" width="40px" style="min-width: 40px" src="' + dokLogo + '" alt="DoK"/></a>' +
                                '<a href="' + wikiLink + '" target="_blank">' +
                                '<img class="img-thumbnail" width="50px" style="min-width: 40px" src="' + wikiLogo + '" alt="Wiki"/></a>';
                        },
                        targets: 6, //Buttons
                    },
                    {
                        targets: [0, 1, 2, 4, 5, 6],
                        searchable: false,
                        visible: true,
                    },
                    {
                        targets: [3],
                        searchable: true,
                        visible: true,
                    },
                    {
                        targets: [0, 2, 3, 6],
                        orderable: false
                    },
                    {
                        targets: [1, 4, 5],
                        orderable: true
                    },
                ],
            });
        });
    </script>
{% endblock %}
