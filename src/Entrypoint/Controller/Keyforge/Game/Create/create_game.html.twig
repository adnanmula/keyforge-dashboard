{% extends "Keyforge/Shared/keyforge_base.html.twig" %}

{% block title %}{{ 'game.register_game'|trans }}{% endblock %}

{% block body %}
    {% if result != false %}
        <div class="alert alert-{% if success == true %}success{% else %}danger{% endif %}" role="alert">{{ result }}</div>
    {% endif %}

    <script>
        $(function () {
            $('[data-toggle="tooltip"]').tooltip({
                'container': 'body',
                'placement': 'right'
            })
        })
    </script>

    <div class="shadow-lg p-3 mb-5 bg-white rounded">
        <form id="createGame" action="{{ path('keyforge_game_create') }}" method="post">
            <div class="row">
                <div class="col-md-12">
                    <div class="form-group">
                        <label for="competition" class="form-label">{{ 'game.type'|trans }}</label>

                        <select class="form-select" name="competition" id="competition">
                            <option value="SOLO" disabled>{{ 'game.solo'|trans }}</option>
                            <option value="FRIENDS" selected>{{ 'game.with_friends'|trans }}</option>
                            <option value="TCO_CASUAL">{{ 'game.tco_casual'|trans }}</option>
                            <option value="TCO_COMPETITIVE">{{ 'game.tco_competitive'|trans }}</option>
                            <option value="LGS">{{ 'game.lgs'|trans }}</option>
                            <option value="VT">{{ 'game.vt'|trans }}</option>
                            <option value="NATIONAL">{{ 'game.national'|trans }}</option>
                            <option value="NKFL">{{ 'game.nkfl'|trans }}</option>
                        </select>
                    </div>
                </div>
            </div>

            <div class="divider py-1"></div>

            <div class="row">
                <div class="col-md-6">
                    <div class="d-flex justify-content-between align-items-center mb-2">
                        <label for="winner" class="form-label m-0">{{ 'game.winner'|trans }}</label>
                        <div class="form-check form-switch m-0">
                            <input class="form-check-input selectSwitch" type="checkbox" id="winnerSwitch" data-entity="user" data-side="winner">
                            <label class="form-check-label" for="winnerSwitch">{{ 'menu.external'|trans }}</label>
                        </div>
                    </div>

                    <select id="winner" name="winner" class="form-select userSelector"></select>
                    <input type="text" id="winnerId" name="winner" class="form-control" style="display: none">
                </div>

                <div class="col-md-6">
                    <div class="d-flex justify-content-between align-items-center mb-2">
                        <label for="loser" class="form-label mb-0">{{ 'game.loser'|trans }}</label>
                        <div class="form-check form-switch m-0">
                            <input class="form-check-input selectSwitch" type="checkbox" id="loserSwitch" data-entity="user" data-side="loser">
                            <label class="form-check-label" for="loserSwitch">{{ 'menu.external'|trans }}</label>
                        </div>
                    </div>

                    <select id="loser" name="loser" class="form-select userSelector"></select>
                    <input type="text" id="loserId" name="loser" class="form-control" style="display: none">
                </div>
            </div>

            <div class="divider py-1"></div>

            <div class="row">
                <div class="col-md-6">
                    <div class="d-flex justify-content-between align-items-center mb-2">
                        <label for="winnerDeck" class="form-label m-0">{{ 'game.winner_deck'|trans }}</label>
                        <div class="form-check form-switch m-0">
                            <input class="form-check-input selectSwitch" type="checkbox" id="winnerDeckSwitch" data-entity="deck" data-side="winner">
                            <label class="form-check-label" for="winnerSwitch">{{ 'menu.use_id'|trans }}</label>
                        </div>
                    </div>

                    <select id="winnerDeck" name="winnerDeck" class="form-select deckSelector"></select>
                    <input type="text" id="winnerDeckId" name="winnerDeck" class="form-control" style="display: none">
                </div>

                <div class="col-md-6">
                    <div class="d-flex justify-content-between align-items-center mb-2">
                        <label for="loserDeck" class="form-label m-0">{{ 'game.loser_deck'|trans }}</label>
                        <div class="form-check form-switch m-0">
                            <input class="form-check-input selectSwitch" type="checkbox" id="loserDeckSwitch" data-entity="deck" data-side="loser">
                            <label class="form-check-label" for="loserSwitch">{{ 'menu.use_id'|trans }}</label>
                        </div>
                    </div>

                    <select id="loserDeck" name="loserDeck" class="form-select deckSelector"></select>
                    <input type="text" id="loserDeckId" name="loserDeck" class="form-control" style="display: none">
                </div>
            </div>

            <div class="divider py-1"></div>

            <div class="row">
                <div class="col-md-6">
                    <label for="winnerChains" class="form-label">{{ 'game.winner_chains'|trans }}</label>
                    <input type="number" class="form-control" id="winnerChains" value="0" name="winnerChains" max="20" min="0" autocomplete="off" required>
                </div>
                <div class="col-md-6">
                    <label for="loserChains" class="form-label">{{ 'game.loser_chains'|trans }}</label>
                    <input type="number" class="form-control" id="loserChains" value="0" name="loserChains" max="20" min="0" autocomplete="off" required>
                </div>
            </div>

            <div class="divider py-1"></div>

            <div class="row">
                <div class="col-md-6">
                    <label for="winnerScore" class="form-label">{{ 'game.winner_score'|trans }}</label>
                    <br>
                    <div class="btn-group btn-group-toggle" data-toggle="buttons">
                        <label class="btn btn-dark">
                            <input class="form-check-input" type="radio" name="winnerScore" id="inlineRadio3" value="3" checked>  3
                        </label>
                    </div>
                </div>
                <div class="col-md-6">
                    <label for="loserScore" class="form-label">{{ 'game.loser_score'|trans }}</label>
                    <br>
                    <div class="btn-group btn-group-toggle" data-toggle="buttons">
                        <label class="btn btn-dark">
                            <input class="form-check-input" type="radio" name="loserScore" value="0" autocomplete="off" checked>  0
                        </label>
                        <label class="btn btn-dark">
                            <input class="form-check-input" type="radio" name="loserScore" value="1" autocomplete="off">  1
                        </label>
                        <label class="btn btn-dark">
                            <input class="form-check-input" type="radio" name="loserScore" value="2" autocomplete="off">  2
                        </label>
                    </div>
                </div>
            </div>

            <div class="row mt-3">
                <div class="col-md-6">
                    <label for="firstTurn" class="form-label">{{ 'game.first_turn'|trans }}</label>
                    <i class="bi bi-info-circle" data-toggle="tooltip" title="Si es un random pega el nombre aunque no salga en el selector"></i>
                    <select id="firstTurn" name="firstTurn" class="form-select"></select>
                </div>
                <div class="col-md-6">
                    <label for="date" class="form-label">{{ 'game.date'|trans }}</label> <br>
                    <input class="form-control" type="date" name="date" id="datepicker" min="2022-01-01" max="2030-12-31" required>
                </div>
            </div>

            <div class="row mt-3">
                <div class="col-md-12">
                    <label for="notes" class="form-label">{{ 'game.notes'|trans }}</label>
                    <textarea class="form-control" name="notes" id="notes" rows="5" maxlength="512"></textarea>
                </div>
            </div>

            <div class="divider py-1"></div>

            <div class="row mt-3">
                <div class="col-md-12">
                    <label for="log" class="form-label">{{ 'game.log'|trans }}</label>
                    <i class="bi bi-info-circle" data-toggle="tooltip" title="{{ 'menu.game_log_tooltip'|trans }}"></i>
                    <textarea class="form-control" name="log" id="log" rows="5"></textarea>
                </div>
            </div>

            <div class="divider py-1"></div>

            <div class="row mt-3">
                <div class="col-md-12">
                    <button type="submit" class="btn btn-block btn-dark w-100">{{ 'game.save'|trans }}</button>
                </div>
            </div>
        </form>
    </div>

    <script>
        $(document).ready(function () {
            $('#winnerSwitch').prop('checked', false);
            $('#winnerSwitch').prop('disabled', true);
            $('#loserSwitch').prop('checked', false);
            $('#loserSwitch').prop('disabled', true);
            $('#winnerSwitch').trigger('change');
            $('#loserSwitch').trigger('change');

            $('#datepicker')[0].value = new Date().toISOString().split('T')[0];
        });

        function currentUsers() {
            const winnerSelect = $('#winner');
            const loserSelect = $('#loser');
            const winnerInput = $('#winnerId');
            const loserInput = $('#loserId');

            let winner = undefined;
            let loser = undefined;

            if (winnerSelect.prop('disabled')) {
                if ('' !== winnerInput.val()) {
                    winner = {id: winnerInput.val(), name: winnerInput.val()};
                }
            } else {
                let selectData = winnerSelect.select2('data');

                if (selectData.length > 0) {
                    winner = {id: selectData[0].id, name: selectData[0].name};
                }
            }

            if (loserSelect.prop('disabled')) {
                if ('' !== loserInput.val()) {
                    loser = {id: loserInput.val(), name: loserInput.val()};
                }
            } else {
                let selectData = loserSelect.select2('data');

                if (selectData.length > 0) {
                    loser = {id: selectData[0].id, name: selectData[0].name};
                }
            }

            return {
                winner: winner,
                loser: loser,
            }
        }

        function refreshFirstPlayerInput() {
            const users = currentUsers();
            const winner = users.winner;
            const loser = users.loser;

            const select = $('#firstTurn');

            select.empty();

            if (winner) {
                select.append(new Option(winner.name, winner.id, false, false));
            }

            if (undefined !== loser) {
                if (undefined === winner || winner.id !== loser.id) {
                    select.append(new Option(loser.name, loser.id, false, false));
                }
            }

            select.trigger('change');
        }

        function checkSoloPlay() {
            const users = currentUsers();
            const winner = users.winner;
            const loser = users.loser;

            if (undefined === winner || undefined === loser || winner.id !== loser.id) {
                $('#competition > option').each(function (i, option) {
                    option.disabled = false;
                });

                if ($('#competition')[0].value === 'SOLO') {
                    $('#competition')[0].value = 'FRIENDS';
                }

                $('#competition')[0].options[0].disabled = true;
                $('#competition').trigger('change');
                return;
            }

            $('#competition > option').each(function (i, option) {
                option.disabled = true;
            });

            $('#competition')[0].value = 'SOLO';
            $('#competition')[0].options[0].disabled = false;
            $('#competition').trigger('change');
        }

        $('select').on('select2:open', function(e) {
            const select2 = $(e.target).data('select2');

            $('.select2-search--dropdown .select2-search__field').attr('placeholder', '{{ 'menu.type_to_search'|trans }}');

            if (!select2.options.get('multiple')) {
                select2.dropdown.$search.get(0).focus();
            }
        });

        $('#firstTurn').select2({
            theme: 'bootstrap-5',
            minimumResultsForSearch: Infinity,
        });

        $('#competition').select2({
            theme: 'bootstrap-5',
            minimumResultsForSearch: Infinity,
        });

        $('#competition').on('change', function() {
            const value = $(this).val();
            let shouldTrigger = false;

            if ('SOLO' === value || 'FRIENDS' === value) {
                if (false === $('#winnerSwitch').prop('disabled')) {
                    $('#winnerSwitch').prop('checked', false);
                    $('#winnerSwitch').prop('disabled', true);
                    shouldTrigger = true;
                }

                if (false === $('#loserSwitch').prop('disabled')) {
                    $('#loserSwitch').prop('checked', false);
                    $('#loserSwitch').prop('disabled', true);
                    shouldTrigger = true;
                }
            } else {
                if ($('#winnerSwitch').prop('disabled')) {
                    $('#winnerSwitch').prop('disabled', false);
                    shouldTrigger = true;
                }

                if ($('#loserSwitch').prop('disabled')) {
                    $('#loserSwitch').prop('disabled', false);
                    shouldTrigger = true;
                }
            }

            if (shouldTrigger) {
                $('#winnerSwitch').trigger('change');
                $('#loserSwitch').trigger('change');
            }
        });

        $('.deckSelector').select2({
            theme: 'bootstrap-5',
            ajax: {
                url: '{{ path('keyforge_decks_json') }}',
                minimumInputLength: 3,
                data: function (params) {
                    let query = {
                        search: {
                            'value': params.term,
                        },
                        'extraFilterDeckTypes': ['STANDARD', 'ALLIANCE'],
                        'length': 20,
                    };

                    if ('' === params.term || undefined === params.term) {
                        query.extraFilterOnlyOwned = true;
                        query.extraFilterOnlyFriends = true;
                        query.extraFilterOwner = '{{ app.user.id }}';
                    }

                    return query;
                },
                processResults: function (data) {
                    $.each(data.data, function(i, d) {
                        data.data[i]['text'] = d.name;
                    });

                    return {
                        results: data.data
                    };
                }
            }
        });

        $('.userSelector').select2({
            theme: 'bootstrap-5',
            ajax: {
                url: '{{ path('keyforge_users_json') }}',
                minimumInputLength: 3,
                data: function (params) {
                    let query = {
                        name: params.term,
                        length: 20,
                    };

                    if ('' === params.term || undefined === params.term) {
                        query.onlyFriends = true;
                        query.userId = '{{ app.user.id }}';
                    }

                    return query;
                },
                processResults: function (data) {
                    $.each(data.data, function(i, d) {
                        data.data[i]['text'] = d.name;
                    });

                    return {
                        results: data.data
                    };
                }
            }
        });

        $('.selectSwitch').on('change', function() {
            const isExternalOrId = $(this).is(':checked');
            const entity = $(this).data('entity');
            const side = $(this).data('side');

            let selector;
            let idSelector;

            if ('user' === entity) {
                selector = $('#' + side);
                idSelector = $('#' + side + 'Id');
            } else {
                selector = $('#' + side + 'Deck');
                idSelector = $('#' + side + 'DeckId');
            }

            selector.val(undefined);
            selector.trigger('change');
            idSelector.val(undefined);

            if (isExternalOrId) {
                selector.next('.select2-container').hide();
                idSelector.show();

                selector.prop('disabled', true).trigger('change');
                idSelector.prop('disabled', false)
            } else {
                selector.next('.select2-container').show();
                idSelector.hide();

                selector.prop('disabled', false).trigger('change');
                idSelector.prop('disabled', true);
            }

            refreshFirstPlayerInput();
            checkSoloPlay();
        });

        $('#winner, #loser, #winnerId, #loserId').on('change', function() {
            refreshFirstPlayerInput();
            checkSoloPlay();
        });

        $('#createGame').on('submit', function(e) {
            e.preventDefault();

            const fieldsToCheck = ['winner', 'loser', 'winnerDeck', 'loserDeck'];

            fieldsToCheck.forEach(function(field) {
                $(`input[name="${field}"], select[name="${field}"]`).each(function() {
                    if (!$(this).val()) {
                        $(this).remove();
                    }
                });
            });

            this.submit();
        });
    </script>
{% endblock %}
