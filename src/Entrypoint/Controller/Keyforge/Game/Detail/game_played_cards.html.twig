{% block header %}
    <style>
        .timeline {
            position: relative;
            max-width: 800px;
            margin: auto;
            padding: 20px 0;
        }

        .timeline::after {
            content: '';
            position: absolute;
            width: 4px;
            background-color: #999;
            top: 0;
            bottom: 0;
            left: 50%;
            margin-left: -2px;
        }

        .timeline-item {
            padding: 20px 30px;
            position: relative;
            background-color: inherit;
            width: 50%;
        }

        .timeline-item::after {
            content: ' ';
            position: absolute;
            width: 20px;
            height: 20px;
            right: -10px;
            background-color: white;
            border: 4px solid #ff9f55;
            top: 20px;
            border-radius: 50%;
            z-index: 1;
        }

        .timeline-item.left {
            left: 0;
        }

        .timeline-item.right {
            left: 50%;
        }

        .timeline-item.right::after {
            left: -10px;
        }

        .timeline-content {
            padding: 20px;
            background-color: white;
            position: relative;
            border-radius: 6px;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        }

        .timeline-content h3 {
            margin-top: 0;
        }

        .timeline-content ul {
            padding-left: 20px;
            margin: 10px 0 0 0;
        }

        .timeline-user {
            display: none;
        }

        @media screen and (max-width: 600px) {
            .timeline::after {
                left: 31px;
            }

            .timeline-item {
                width: 100%;
                padding-left: 70px;
                padding-right: 25px;
            }

            .timeline-item.right {
                left: 0;
            }

            .timeline-item.right::after,
            .timeline-item.left::after {
                left: 15px;
            }

            .timeline-user {
                display: block;
            }
        }
    </style>
{% endblock %}

<div class="row">
    <h5 style="text-align:center;">{{ 'menu.timeline_played_cards'|trans }}</h5>

    <div class="divider py-1"></div>

    <div class="col-6"><h5 style="text-align:right;" id="player1Name"></h5></div>
    <div class="col-6"><h5 style="text-align:left;" id="player2Name"></h5></div>
    <div class="timeline" id="timeline"></div>
</div>

<script>
    const cardsPlayedData = JSON.parse('{{ game.log.cardsPlayed|json_encode|raw }}');
    const [playerName1, playerName2] = [...new Set(cardsPlayedData.map(item => item.player))];

    document.getElementById("player1Name").textContent = playerName1;
    document.getElementById("player2Name").textContent = playerName2;

    const grouped = {};

    cardsPlayedData.forEach(entry => {
        const key = `${entry.player}_${entry.turn.value}`;
        if (!grouped[key]) {
            grouped[key] = {
                player: entry.player,
                turn: entry.turn.value,
                cards: []
            };
        }
        grouped[key].cards.push(...entry.value.map(v => v.trim()));
    });

    const sorted = Object.values(grouped).sort((a, b) => a.turn - b.turn);
    const timeline = document.getElementById('timeline');

    sorted.forEach(entry => {
        const side = entry.player === playerName1 ? 'left' : 'right';

        const item = document.createElement('div');
        item.className = `timeline-item ${side}`;

        const content = document.createElement('div');
        content.className = 'timeline-content';

        let bulletPosition = '';
        if ('left' === side) {
            content.style.textAlign = 'right';
        }

        const turn = '{{ 'menu.turn'|trans }}' + entry.turn;

        content.innerHTML = `
          <h5 class="timeline-user">${entry.player}</h5>
          <h5>${turn}</h5>
          <span class="text-nowrap">${entry.cards.map(card => `${card}`).join("<br>")}</span>
        `;

        item.appendChild(content);
        timeline.appendChild(item);
    });
</script>
